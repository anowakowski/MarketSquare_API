// <auto-generated />
using System;
using MarketSquare.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketSquare.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200218091422_addVirtualNoticeTags")]
    partial class addVirtualNoticeTags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("MarketSquare.API.Data.Models.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.NoticeTag", b =>
                {
                    b.Property<int>("NoticeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("NoticeId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("NoticeTags");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.UserNotice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSent")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoticeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NoticeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotices");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.UserTagSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlacklisted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTagSubscription");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.UserUserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlacklisted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubscribedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubscribedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("SubscribedUsers");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.Notice", b =>
                {
                    b.HasOne("MarketSquare.API.Data.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.NoticeTag", b =>
                {
                    b.HasOne("MarketSquare.API.Data.Models.Notice", "Notice")
                        .WithMany("NoticeTags")
                        .HasForeignKey("NoticeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketSquare.API.Data.Models.Tag", "Tag")
                        .WithMany("NoticeTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.UserNotice", b =>
                {
                    b.HasOne("MarketSquare.API.Data.Models.Notice", "Notice")
                        .WithMany()
                        .HasForeignKey("NoticeId");

                    b.HasOne("MarketSquare.API.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.UserTagSubscription", b =>
                {
                    b.HasOne("MarketSquare.API.Data.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("MarketSquare.API.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MarketSquare.API.Data.Models.UserUserSubscription", b =>
                {
                    b.HasOne("MarketSquare.API.Data.Models.User", "SubscribedUser")
                        .WithMany()
                        .HasForeignKey("SubscribedUserId");

                    b.HasOne("MarketSquare.API.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
